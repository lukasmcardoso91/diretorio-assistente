import type { ChatResponse, Block } from '../lib/types';

// Mock responses for different types of queries
export const mockChatResponses: Record<string, ChatResponse> = {
  default: {
    message: `Ol√°! üëã Sou sua assistente virtual para educa√ß√£o infantil. 

Como posso ajud√°-la hoje? Posso auxiliar com:

- üìã **Comunicados e avisos** para fam√≠lias
- üéâ **Planejamento de eventos** e festas tem√°ticas  
- ‚è∞ **Organiza√ß√£o de rotinas** e hor√°rios
- üçé **Orienta√ß√µes sobre alimenta√ß√£o** e cuidados
- üë• **Processos de matr√≠cula** e documenta√ß√£o

Digite sua d√∫vida ou escolha uma das op√ß√µes r√°pidas abaixo!`,
    blocks: [
      {
        type: 'action_suggestion',
        title: 'Agendar reuni√£o com fam√≠lias',
        defaultDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(),
      }
    ]
  },

  matricula: {
    message: `# üë• Processo de Matr√≠cula

Aqui est√£o as **orienta√ß√µes principais** para matr√≠culas:

## Documentos Necess√°rios:
- Certid√£o de nascimento (original + c√≥pia)
- Carteira de vacina√ß√£o atualizada
- Comprovante de resid√™ncia
- RG e CPF dos respons√°veis
- Fotos 3x4 da crian√ßa

## Cronograma Sugerido:
1. **Reuni√£o de apresenta√ß√£o** da escola
2. **Entrega da documenta√ß√£o**
3. **Per√≠odo de adapta√ß√£o** (1-2 semanas)
4. **Acompanhamento inicial** com fam√≠lias

Gostaria que eu prepare um **comunicado sobre matr√≠culas** ou um **checklist** para organizar o processo?`,
    blocks: [
      {
        type: 'doc_suggestion',
        title: 'Gerar comunicado sobre matr√≠culas',
        docType: 'comunicado',
      },
      {
        type: 'action_suggestion',
        title: 'Agendar per√≠odo de matr√≠culas',
        defaultDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),
      }
    ]
  },

  eventos: {
    message: `# üéÉ Festa de Halloween - Planejamento Completo

Que √≥tima ideia! Vou te ajudar com um **plano detalhado** para o Halloween:

## Sugest√µes de Atividades:
- üëª **Oficina de fantasias** (materiais recicl√°veis)
- üé® **Decora√ß√£o colaborativa** com as crian√ßas
- üç≠ **Mesa tem√°tica** com guloseimas saud√°veis
- üì∏ **Cantinho da foto** com cen√°rio assombrado
- üéµ **Playlist tem√°tica** infantil

## Comunica√ß√£o com Fam√≠lias:
- Avisar sobre fantasias (opcional)
- Informar sobre alimentos e restri√ß√µes
- Convidar para participar das atividades

Posso **gerar o plano completo** e **agendar lembretes** para voc√™!`,
    blocks: [
      {
        type: 'doc_suggestion',
        title: 'Gerar plano completo da festa de Halloween',
        docType: 'plano',
      },
      {
        type: 'action_suggestion',
        title: 'Lembrete: enviar comunicado para fam√≠lias',
        defaultDate: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000).toISOString(),
      }
    ]
  },

  comunicados: {
    message: `# üìã Comunicados Eficazes

Para **comunica√ß√µes delicadas** com fam√≠lias, algumas dicas importantes:

## Tom e Linguagem:
- ‚úÖ **Acolhedor e respeitoso**
- ‚úÖ **Linguagem clara e objetiva**
- ‚úÖ **Foco na parceria escola-fam√≠lia**

## Estrutura Recomendada:
1. **Sauda√ß√£o calorosa**
2. **Contexto da situa√ß√£o**
3. **Orienta√ß√µes pr√°ticas**
4. **Abertura para di√°logo**
5. **Agradecimento e despedida**

## Temas Comuns:
- Quest√µes comportamentais
- Mudan√ßas na rotina
- Orienta√ß√µes pedag√≥gicas
- Eventos e atividades

Quer que eu **redija um comunicado espec√≠fico** para voc√™?`,
    blocks: [
      {
        type: 'doc_suggestion',
        title: 'Criar comunicado personalizado',
        docType: 'comunicado',
      }
    ]
  },

  alimentacao: {
    message: `# üçé Orienta√ß√µes sobre Alimenta√ß√£o Escolar

## Diretrizes Nutricionais:
- **Variedade** de cores e texturas
- **Frutas da esta√ß√£o** sempre presentes
- **Redu√ß√£o de a√ß√∫car** e processados
- **√Ågua** como bebida principal

## Sugest√µes de Card√°pio:
- **Segunda**: Arroz, feij√£o, frango desfiado, cenoura
- **Ter√ßa**: Macarr√£o integral, molho de tomate, carne mo√≠da
- **Quarta**: Pur√™ de batata, peixe grelhado, salada
- **Quinta**: Risoto de ab√≥bora, frango, br√≥colis
- **Sexta**: Pizza caseira com vegetais

## Alergias e Restri√ß√µes:
- Manter **cadastro atualizado**
- **Alternativas** sempre dispon√≠veis
- **Comunica√ß√£o clara** com cozinha

Precisa de um **card√°pio detalhado** ou **comunicado nutricional**?`,
    blocks: [
      {
        type: 'doc_suggestion',
        title: 'Gerar card√°pio semanal',
        docType: 'plano',
      },
      {
        type: 'action_suggestion',
        title: 'Revisar fichas de alergias alimentares',
        defaultDate: new Date(Date.now() + 1 * 24 * 60 * 60 * 1000).toISOString(),
      }
    ]
  },

  horarios: {
    message: `# ‚è∞ Organiza√ß√£o de Hor√°rios e Rotinas

## Estrutura Di√°ria Sugerida:

**07h30 - 08h30**: Acolhida e atividades livres
**08h30 - 09h00**: Roda de conversa e chamada
**09h00 - 10h00**: Atividade dirigida principal
**10h00 - 10h15**: Lanche da manh√£
**10h15 - 11h15**: Atividades ao ar livre
**11h15 - 12h00**: Higiene e prepara√ß√£o para almo√ßo
**12h00 - 13h00**: Almo√ßo
**13h00 - 14h00**: Descanso/sono
**14h00 - 15h00**: Atividades pedag√≥gicas
**15h00 - 15h15**: Lanche da tarde
**15h15 - 16h30**: Atividades livres e sa√≠da

## Dicas para Transi√ß√µes:
- **M√∫sicas** para cada momento
- **Sinais visuais** e sonoros
- **Rotina flex√≠vel** mas consistente

Quer um **cronograma personalizado** para sua turma?`,
    blocks: [
      {
        type: 'doc_suggestion',
        title: 'Criar cronograma personalizado',
        docType: 'plano',
      }
    ]
  }
};

// Simulate API delay
export const simulateDelay = (ms: number = 800): Promise<void> => {
  return new Promise(resolve => setTimeout(resolve, ms));
};

// Generate mock response based on message content
export const generateMockResponse = async (message: string): Promise<ChatResponse> => {
  await simulateDelay();
  
  const lowerMessage = message.toLowerCase();
  
  if (lowerMessage.includes('matricula') || lowerMessage.includes('matr√≠cula')) {
    return mockChatResponses.matricula;
  }
  
  if (lowerMessage.includes('halloween') || lowerMessage.includes('festa') || lowerMessage.includes('evento')) {
    return mockChatResponses.eventos;
  }
  
  if (lowerMessage.includes('comunicado') || lowerMessage.includes('avisar') || lowerMessage.includes('fam√≠lia')) {
    return mockChatResponses.comunicados;
  }
  
  if (lowerMessage.includes('alimenta√ß√£o') || lowerMessage.includes('comida') || lowerMessage.includes('lanche')) {
    return mockChatResponses.alimentacao;
  }
  
  if (lowerMessage.includes('hor√°rio') || lowerMessage.includes('rotina') || lowerMessage.includes('cronograma')) {
    return mockChatResponses.horarios;
  }
  
  return mockChatResponses.default;
};